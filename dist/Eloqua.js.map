{"version":3,"sources":["Eloqua.js"],"names":["log","ResponseError","Error","constructor","message","path","response","request","config","status","Eloqua","options","apiCalls","lastError","axiosOptions","headers","restVersion","bulkVersion","axios","create","baseURL","timeout","sitename","username","password","oauth","auth","appcloud","Appcloud","assets","Assets","bulk","Bulk","data","Data","system","System","_throwError","object","error","statusText","method","url","JSON","stringify","hasOwnProperty","getPasswordBearer","grant_type","scope","post","client_id","client_secret","token_type","expires","refresh_token","access_token","setHeaders","name","value","getBaseURL","cb","requestPromise","get","catch","callbackErrorOrThrow","then","Object","keys","length","urls","base","getAuth","Authorization","_getURL","api","uri","_request","qs","requestOptions","params","_validate","accepted","input","output","forEach","handler"],"mappings":"AAAA;;;;;;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,GAAG,GAAG,oBAAM,gBAAN,CAAZ;;AAGA,MAAMC,aAAN,SAA4BC,KAA5B,CAAkC;AAOhCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACnC,UAAMF,OAAN;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,OAAL,GAAeD,QAAQ,CAACE,MAAxB;AACA,SAAKF,QAAL,GAAgB,CAACA,QAAQ,IAAI,EAAb,EAAiBA,QAAjB,IAA6BA,QAA7C;AACA,SAAKG,MAAL,GAAcH,QAAQ,CAACG,MAAvB;AACD;;AAb+B;;AA8CnB,MAAMC,MAAN,CAAa;AAuC1BP,EAAAA,WAAW,CAACQ,OAAD,EAAU;AAAA;AAAA;AAAA,aAlCT;AAkCS;AAAA;AAAA;AAAA,aA7BT;AA6BS;AAAA;AAAA;AAAA,aAxBT;AAwBS;AAAA;AAAA;AAAA,aAnBZ;AAmBY;AAAA;AAAA;AAAA,aAdV;AAcU;AAMnB,SAAKC,QAAL,GAAgB,CAAhB;AAKA,SAAKC,SAAL,GAAiB,EAAjB;AAKA,SAAKC,YAAL,GAAoB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAApB;AAKA,SAAKC,WAAL,GAAmBL,OAAO,IAAIA,OAAO,CAACK,WAAnB,GAAiCL,OAAO,CAACK,WAAzC,GAAuD,KAA1E;AAKA,SAAKC,WAAL,GAAmBN,OAAO,IAAIA,OAAO,CAACM,WAAnB,GAAiCN,OAAO,CAACM,WAAzC,GAAuD,KAA1E;AAEA,4DAAgBC,eAAMC,MAAN,EAAhB;;AAEA,QAAIR,OAAO,IAAIA,OAAO,CAACS,OAAvB,EAAgC;AAC9B,WAAKN,YAAL,CAAkBM,OAAlB,GAA4BT,OAAO,CAACS,OAApC;AACD;;AAED,QAAIT,OAAO,IAAIA,OAAO,CAACU,OAAvB,EAAgC;AAC9B,WAAKP,YAAL,CAAkBO,OAAlB,GAA4BV,OAAO,CAACU,OAApC;AACD;;AAED,QAAIV,OAAO,IAAIA,OAAO,CAACW,QAAnB,IAA+BX,OAAO,CAACY,QAAvC,IAAmDZ,OAAO,CAACa,QAA/D,EAAyE;AACvE,gEAAiBb,OAAO,CAACW,QAAzB;AACA,gEAAiBX,OAAO,CAACY,QAAzB;AACA,gEAAiBZ,OAAO,CAACa,QAAzB;;AACA,UAAI,CAACb,OAAO,CAACc,KAAb,EAAoB;AAClB,aAAKX,YAAL,CAAkBY,IAAlB,GAAyB;AACvBH,UAAAA,QAAQ,EAAG,GAAEZ,OAAO,CAACW,QAAS,KAAIX,OAAO,CAACY,QAAS,EAD5B;AAEvBC,UAAAA,QAAQ,EAAEb,OAAO,CAACa;AAFK,SAAzB;AAID;AACF;;AAED,QAAIb,OAAO,IAAIA,OAAO,CAACc,KAAvB,EAA8B;AAC5B,0DAAcd,OAAO,CAACc,KAAtB;AACD;;AAID,SAAKE,QAAL,GAAgB,IAAIC,iBAAJ,CAAa,IAAb,CAAhB;AAIA,SAAKC,MAAL,GAAc,IAAIC,eAAJ,CAAW,IAAX,CAAd;AAIA,SAAKC,IAAL,GAAY,IAAIC,aAAJ,CAAS,IAAT,CAAZ;AAIA,SAAKC,IAAL,GAAY,IAAIC,aAAJ,CAAS,IAAT,CAAZ;AAIA,SAAKC,MAAL,GAAc,IAAIC,eAAJ,CAAW,IAAX,CAAd;AACD;;AAUDC,EAAAA,WAAW,CAACC,MAAD,EAASjC,IAAT,EAAe;AACxB,QAAIkC,KAAK,GAAG,EAAZ;;AACA,QAAID,MAAM,CAAC9B,MAAP,IAAiB8B,MAAM,CAAChC,QAAxB,IAAoCgC,MAAM,CAAChC,QAAP,CAAgBG,MAApD,IAA8D6B,MAAM,CAAChC,QAAP,CAAgBkC,UAAlF,EAA8F;AAC5F,YAAM;AAAClC,QAAAA,QAAQ,EAAE;AAACG,UAAAA,MAAD;AAAS+B,UAAAA;AAAT,SAAX;AAAiChC,QAAAA,MAAM,EAAE;AAACiC,UAAAA,MAAD;AAASC,UAAAA;AAAT;AAAzC,UAA0DJ,MAAhE;AACA,YAAMlC,OAAO,GAAK,GAAEK,MAAO,iBAAgBgC,MAAO,eAAcC,GAAI,MAAKF,UAAW,GAApF;AACAD,MAAAA,KAAK,GAAG,IAAItC,aAAJ,CAAkBG,OAAlB,EAA2BC,IAA3B,EAAiCiC,MAAjC,CAAR;AACAtC,MAAAA,GAAG,CAAE,GAAEI,OAAQ,IAAGuC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACL,IAAtB,CAA4B,EAA3C,CAAH;AACD,KALD,MAKO,IAAIK,MAAM,CAACO,cAAP,CAAsB,QAAtB,KAAmCP,MAAM,CAACO,cAAP,CAAsB,SAAtB,CAAvC,EAAyE;AAC9E,YAAM;AAACrC,QAAAA,MAAM,EAAE;AAACiC,UAAAA,MAAD;AAASC,UAAAA;AAAT;AAAT,UAA0BJ,MAAhC;AACA,YAAMlC,OAAO,GAAK,iCAAgCqC,MAAO,eAAcC,GAAI,EAA3E;AACAH,MAAAA,KAAK,GAAG,IAAItC,aAAJ,CAAkBG,OAAlB,EAA2BC,IAA3B,EAAiCiC,MAAjC,CAAR;AACAtC,MAAAA,GAAG,CAAE,GAAEI,OAAQ,IAAGuC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACL,IAAtB,CAA4B,EAA3C,CAAH;AACD,KALM,MAKA;AACLM,MAAAA,KAAK,GAAGD,MAAR;AACD;;AACDtC,IAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,SAAKa,SAAL,GAAiB0B,KAAjB;AACA,UAAMA,KAAN;AACD;;AASD,QAAMO,iBAAN,CAAwBxB,QAAxB,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsD;AACpD,UAAMkB,GAAG,GAAG,4CAAZ;AACA,UAAMT,IAAI,GAAG;AACXc,MAAAA,UAAU,EAAE,UADD;AAEXC,MAAAA,KAAK,EAAE,MAFI;AAGXzB,MAAAA,QAAQ,EAAG,GAAED,QAAS,KAAIC,QAAS,EAHxB;AAIXC,MAAAA,QAAQ,EAAEA;AAJC,KAAb;;AAMA,QAAI;AACF,YAAMlB,QAAQ,GAAG,MAAMY,eAAM+B,IAAN,CAAWP,GAAX,EAAgBT,IAAhB,EAAsB;AAC3CP,QAAAA,IAAI,EAAE;AACJH,UAAAA,QAAQ,EAAE,kDAAY2B,SADlB;AAEJ1B,UAAAA,QAAQ,EAAE,kDAAY2B;AAFlB;AADqC,OAAtB,CAAvB;AAMA,wDAAYC,UAAZ,GAAyB9C,QAAQ,CAAC2B,IAAT,CAAcmB,UAAvC;AACA,wDAAYC,OAAZ,GAAsB/C,QAAQ,CAAC2B,IAAT,CAAcoB,OAApC;AACA,wDAAYC,aAAZ,GAA4BhD,QAAQ,CAAC2B,IAAT,CAAcqB,aAA1C;AACA,wDAAYC,YAAZ,GAA2BjD,QAAQ,CAAC2B,IAAT,CAAcsB,YAAzC;AACA,YAAM,KAAKC,UAAL,CAAgB,eAAhB,EAAiC,kDAAYJ,UAAZ,GAAyB,GAAzB,GAA+B,kDAAYG,YAA5E,CAAN;AACD,KAZD,CAYE,OAAOhB,KAAP,EAAc;AACd,YAAM,KAAKF,WAAL,CAAiBE,KAAjB,EAAwB,4CAAxB,CAAN;AACD;AACF;;AAQDiB,EAAAA,UAAU,CAACC,IAAD,EAAOC,KAAP,EAAc;AACtB,QAAI,CAAC,KAAK5C,YAAL,CAAkBC,OAAvB,EAAgC;AAC9B,WAAKD,YAAL,CAAkBC,OAAlB,GAA4B,EAA5B;AACD;;AACD,SAAKD,YAAL,CAAkBC,OAAlB,CAA0B0C,IAA1B,IAAkCC,KAAlC;AACD;;AAOD,QAAMC,UAAN,CAAiBC,EAAjB,EAAqB;AACnB5D,IAAAA,GAAG,CAAC,iBAAD,CAAH;;AACA,QAAI,CAAC,KAAKc,YAAL,CAAkBM,OAAnB,IAA8B,KAAKN,YAAL,CAAkBM,OAAlB,KAA8B,IAAhE,EAAsE;AACpEpB,MAAAA,GAAG,CAAC,kBAAD,CAAH;AACA,YAAM0C,GAAG,GAAG,6BAAZ;;AACA,YAAMmB,cAAc,GAAG3C,eAAM4C,GAAN,CAAUpB,GAAV,EAAe,KAAK5B,YAApB,EACpBiD,KADoB,CACdC,oBAAoB,CAACJ,EAAD,EAAK,6BAAL,CADN,CAAvB;;AAGA,aAAOC,cAAc,CAACI,IAAf,CAAqB3D,QAAD,IAAc;AACvC,YAAIA,QAAQ,CAAC2B,IAAT,IAAiBiC,MAAM,CAACC,IAAP,CAAY7D,QAAQ,CAAC2B,IAArB,EAA2BmC,MAA3B,GAAoC,CAAzD,EAA4D;AAC1D,eAAKtD,YAAL,CAAkBM,OAAlB,GAA4Bd,QAAQ,CAAC2B,IAAT,CAAcoC,IAAd,CAAmBC,IAA/C;AACAtE,UAAAA,GAAG,CAAE,YAAW,KAAKc,YAAL,CAAkBM,OAAQ,EAAvC,CAAH;;AACA,cAAIwC,EAAJ,EAAQ;AACNA,YAAAA,EAAE,CAAC,IAAD,EAAO,KAAK9C,YAAL,CAAkBM,OAAzB,EAAkCyC,cAAlC,CAAF;AACD,WAFD,MAEO;AACL,mBAAO,KAAK/C,YAAL,CAAkBM,OAAzB;AACD;AACF,SARD,MAQO;AACL4C,UAAAA,oBAAoB,CAACJ,EAAD,EAAK,6BAAL,CAApB;AACD;AACF,OAZM,CAAP;AAaD,KAnBD,MAmBO;AACL5D,MAAAA,GAAG,CAAE,YAAW,KAAKc,YAAL,CAAkBM,OAAQ,EAAvC,CAAH;;AACA,UAAIwC,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAAC,IAAD,EAAO,KAAK9C,YAAL,CAAkBM,OAAzB,EAAkC,IAAlC,CAAF;AACD;;AACD,aAAO,KAAKN,YAAL,CAAkBM,OAAzB;AACD;AACF;;AAMD,QAAMmD,OAAN,GAAgB;AACdvE,IAAAA,GAAG,CAAC,cAAD,CAAH;;AACA,QAAI,CAAC,KAAKc,YAAL,CAAkBY,IAAnB,KAA4B,CAAC,KAAKZ,YAAL,CAAkBC,OAAnB,IAA8B,CAAC,KAAKD,YAAL,CAAkBC,OAAlB,CAA0ByD,aAArF,CAAJ,EAAyG;AACvGxE,MAAAA,GAAG,CAAC,eAAD,CAAH;;AACA,sCAAI,IAAJ,mBAAiB;AACf,YAAI,kDAAYoD,UAAZ,IAA0B,kDAAYG,YAA1C,EAAwD;AACtDvD,UAAAA,GAAG,CAAC,4BAAD,CAAH;AACA,eAAKwD,UAAL,CAAgB,eAAhB,EAAiC,kDAAYJ,UAAZ,GAAyB,GAAzB,GAA+B,kDAAYG,YAA5E;AACD,SAHD,MAGO,IAAI,kDAAYL,SAAZ,IACT,kDAAYC,aADH,gCACoB,IADpB,uDACsC,IADtC,uDACwD,IADxD,uBAAJ,EAC4E;AACjFnD,UAAAA,GAAG,CAAC,yBAAD,CAAH;AACA,gBAAM,KAAK8C,iBAAL,6BAAuB,IAAvB,qDAAuC,IAAvC,qDAAuD,IAAvD,wBAAN;AACD,SAJM,MAIA;AACL9C,UAAAA,GAAG,CAAC,aAAD,CAAH;AACD;AACF,OAXD,MAWO,IAAI,uFAAkB,IAAlB,uDAAoC,IAApC,uBAAJ,EAAwD;AAC7DA,QAAAA,GAAG,CAAC,oBAAD,CAAH;AACA,aAAKc,YAAL,CAAkBY,IAAlB,GAAyB;AACvBH,UAAAA,QAAQ,EAAG,GAAD,4BAAG,IAAH,uBAAkB,KAAlB,4BAAsB,IAAtB,uBAAqC,EADxB;AAEvBC,UAAAA,QAAQ,8BAAE,IAAF;AAFe,SAAzB;AAID,OANM,MAMA;AACLxB,QAAAA,GAAG,CAAC,YAAD,CAAH;AACD;AACF,KAtBD,MAsBO;AACLA,MAAAA,GAAG,CAAC,YAAD,CAAH;AACD;AACF;;AASDyE,EAAAA,OAAO,CAACC,GAAD,EAAMC,GAAN,EAAW;AAChB,QAAItE,IAAI,GAAGsE,GAAX;;AAEA,QAAID,GAAG,KAAK,MAAZ,EAAoB;AAClBrE,MAAAA,IAAI,GAAG,eAAe,KAAKW,WAApB,GAAkC2D,GAAzC;AACD,KAFD,MAEO,IAAID,GAAG,KAAK,MAAZ,EAAoB;AACzBrE,MAAAA,IAAI,GAAG,eAAe,KAAKY,WAApB,GAAkC0D,GAAzC;AACD;;AAED,WAAOtE,IAAP;AACD;;AAcD,QAAMuE,QAAN,CAAe;AAACF,IAAAA,GAAD;AAAMC,IAAAA,GAAN;AAAWE,IAAAA,EAAX;AAAepC,IAAAA,MAAM,GAAG,KAAxB;AAA+BR,IAAAA,IAA/B;AAAqCtB,IAAAA,OAAO,GAAG;AAA/C,GAAf,EAAmEiD,EAAnE,EAAuE;AACrE,UAAM,KAAKW,OAAL,EAAN;AACA,UAAM,KAAKZ,UAAL,EAAN;AAEA3D,IAAAA,GAAG,CAAC,4BAAD,CAAH;AAEA,UAAM8E,cAAc,GAAG,wBAAU,KAAKhE,YAAf,EAA6BH,OAA7B,CAAvB;AAEAmE,IAAAA,cAAc,CAACpC,GAAf,GAAqB,KAAK+B,OAAL,CAAaC,GAAb,EAAkBC,GAAlB,CAArB;;AAEA,QAAIE,EAAJ,EAAQ;AACNC,MAAAA,cAAc,CAACC,MAAf,GAAwBF,EAAxB;AACD;;AAED,QAAI5C,IAAJ,EAAU;AACR6C,MAAAA,cAAc,CAAC7C,IAAf,GAAsBA,IAAtB;AACD;;AAED6C,IAAAA,cAAc,CAACrC,MAAf,GAAwBA,MAAxB;AAEA,SAAK7B,QAAL,IAAiB,CAAjB;AACAZ,IAAAA,GAAG,CAAE,GAAE8E,cAAc,CAACrC,MAAO,eAAcqC,cAAc,CAAC1D,OAAQ,GAAE0D,cAAc,CAACpC,GAAI,EAApF,CAAH;;AACA,UAAMmB,cAAc,GAAG,sDAAciB,cAAd,EAA8Bf,KAA9B,CAAoCC,oBAAoB,CAACJ,EAAD,EAAKkB,cAAc,CAACpC,GAApB,CAAxD,CAAvB;;AAEA,QAAIkB,EAAJ,EAAQ;AACNC,MAAAA,cAAc,CAACI,IAAf,CAAqB3D,QAAD,IAAc;AAChC,YAAIA,QAAQ,IAAIA,QAAQ,CAAC2B,IAArB,IAA6BiC,MAAM,CAACC,IAAP,CAAY7D,QAAQ,CAAC2B,IAArB,EAA2BmC,MAA3B,GAAoC,CAArE,EAAwE;AACtER,UAAAA,EAAE,CAAC,IAAD,EAAOtD,QAAQ,CAAC2B,IAAhB,EAAsB3B,QAAtB,CAAF;AACD,SAFD,MAEO,IAAIA,QAAQ,IAAIA,QAAQ,CAACG,MAArB,IAA+BH,QAAQ,CAACG,MAAT,GAAkB,GAArD,EAA0D;AAC/DmD,UAAAA,EAAE,CAAC,IAAD,EAAOtD,QAAQ,CAACG,MAAhB,EAAwBH,QAAxB,CAAF;AACD,SAFM,MAEA;AACL0D,UAAAA,oBAAoB,CAACJ,EAAD,EAAKkB,cAAc,CAACpC,GAApB,CAApB;AACD;AACF,OARD;AASD;;AACD,WAAOmB,cAAP;AACD;;AASDmB,EAAAA,SAAS,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACzB,UAAMC,MAAM,GAAG,EAAf;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAkB1B,KAAD,IAAW;AAC1B,UAAIwB,KAAK,CAACxB,KAAD,CAAT,EAAkB;AAChByB,QAAAA,MAAM,CAACzB,KAAD,CAAN,GAAgBwB,KAAK,CAACxB,KAAD,CAArB;AACD;AACF,KAJD;AAKA,WAAOyB,MAAP;AACD;;AAnVyB;;;;;;;;;;;;;;AAsV5B,SAASnB,oBAAT,CAA8BJ,EAA9B,EAAkCvD,IAAlC,EAAwC;AACtC,SAAO,SAASgF,OAAT,CAAiB/C,MAAjB,EAAyB;AAC9B,QAAIC,KAAJ;;AACA,QAAID,MAAM,CAAC9B,MAAP,IAAiB8B,MAAM,CAAChC,QAAxB,IAAoCgC,MAAM,CAAChC,QAAP,CAAgBG,MAApD,IAA8D6B,MAAM,CAAChC,QAAP,CAAgBkC,UAAlF,EAA8F;AAC5F,YAAM;AAAClC,QAAAA,QAAQ,EAAE;AAACG,UAAAA,MAAD;AAAS+B,UAAAA;AAAT,SAAX;AAAiChC,QAAAA,MAAM,EAAE;AAACiC,UAAAA,MAAD;AAASC,UAAAA;AAAT;AAAzC,UAA0DJ,MAAhE;AACA,YAAMlC,OAAO,GAAK,GAAEK,MAAO,iBAAgBgC,MAAO,eAAcC,GAAI,MAAKF,UAAW,GAApF;AACAD,MAAAA,KAAK,GAAG,IAAItC,aAAJ,CAAkBG,OAAlB,EAA2BC,IAA3B,EAAiCiC,MAAjC,CAAR;AACAtC,MAAAA,GAAG,CAAE,GAAEI,OAAQ,IAAGuC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACL,IAAtB,CAA4B,EAA3C,CAAH;AACD,KALD,MAKO,IAAIK,MAAM,CAACO,cAAP,CAAsB,QAAtB,KAAmCP,MAAM,CAACO,cAAP,CAAsB,SAAtB,CAAvC,EAAyE;AAC9E,YAAM;AAACrC,QAAAA,MAAM,EAAE;AAACiC,UAAAA,MAAD;AAASC,UAAAA;AAAT;AAAT,UAA0BJ,MAAhC;AACA,YAAMlC,OAAO,GAAK,iCAAgCqC,MAAO,eAAcC,GAAI,EAA3E;AACAH,MAAAA,KAAK,GAAG,IAAItC,aAAJ,CAAkBG,OAAlB,EAA2BC,IAA3B,EAAiCiC,MAAjC,CAAR;AACAtC,MAAAA,GAAG,CAAE,GAAEI,OAAQ,IAAGuC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACL,IAAtB,CAA4B,EAA3C,CAAH;AACD,KALM,MAKA;AACLM,MAAAA,KAAK,GAAGD,MAAR;AACD;;AACD,QAAIsB,EAAJ,EAAQ;AACN5D,MAAAA,GAAG,CAAC,yBAAD,CAAH;AACA4D,MAAAA,EAAE,CAACrB,KAAD,CAAF;AACD,KAHD,MAGO;AACLvC,MAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,YAAMuC,KAAN;AACD;AACF,GAtBD;AAuBD","sourcesContent":["'use strict';\n/**\n * Eloqua\n * @module Eloqua\n */\n\n/**\n * @external axios\n * @see https://github.com/axios/axios\n */\nimport axios from 'axios';\nimport debug from 'debug';\nimport deepmerge from 'deepmerge';\nimport Appcloud from './appcloud';\nimport Assets from './assets';\nimport Bulk from './bulk';\nimport Data from './data';\nimport System from './system';\n\nconst log = debug('eloqua:request');\n\n/** Custom Error for axios responses */\nclass ResponseError extends Error {\n  /**\n   * Construct a new ResponseError\n   * @param {string} message an message to return instead of the the default error message\n   * @param {string} path the requested path\n   * @param {Object} response the object returned by Axios\n   */\n  constructor(message, path, response) {\n    super(message);\n    this.path = path;\n    this.request = response.config;\n    this.response = (response || {}).response || response;\n    this.status = response.status;\n  }\n}\n\n// TODO: Account Fields, Account Views\n// TODO: Campaign Recent, Campaign Folders\n// TODO: Contact Fields, Contact Filter Folders, Contact List Folders, Contact Scoring, Contact Segment Recent,\n//  Contact Update Rule Sets, Contact Views\n// TODO: Content Section Folders\n// TODO: Dynamic Content, Dynamic Content Folders\n// TODO: Email Config, Email Footer Folders, Email Header Folders, Email Signatures, Email Recent, Email Folders,\n//  Email Signature Folders\n// TODO: Favorite Campaign, Favorite Contact Scoring Model, Favorite Contact Segment, Favorite Email, Favorite Form,\n//  Favorite Landing Page, Favorite Program\n// TODO: Field Merge, Field Merge Folders\n// TODO: Forms Recent, Forms Folders\n// TODO: Hyperlink Folders\n// TODO: Image Folders\n// TODO: Imported File Folders\n// TODO: Landing Page Recent, Landing Page Folders\n// TODO: Programs Recent, Program Folders\n// TODO: SSL Certificates\n// TODO: Data Report\n// TODO: Internal Audit Log\n// TODO: Internal eloquaUI\n// TODO: Internal Sales Tools\n// TODO: Settings Campaign, Settings Campaign Response Activities, Settings User Recent Items\n// TODO: System Import Sources, System Scheduled Tasks, System Security Keys\n// TODO: AppCloud\n//  https://docs.oracle.com/cloud/latest/marketingcs_gs/OMCAB/Developers/AppCloud/Endpoints/app-developer-endpoints.htm\n\n/**\n * Wrapper for Eloqua API\n */\nexport default class Eloqua {\n  /**\n   * Eloqua Sitename\n   * @member {String}\n   */\n  #sitename = null;\n  /**\n   * Eloqua Username\n   * @member {String}\n   */\n  #username = null;\n  /**\n   * Eloqua password\n   * @member {String}\n   */\n  #password = null;\n  /**\n   * Oauth object\n   * @member {Object}\n   */\n  #oauth = null;\n  /**\n   * Axios http request library\n   * @member {axios}\n   */\n  #request = null;\n\n  /** Standard constructor\n   * @param {Object} options Options object to configure class\n   * @param {?String} [options.baseURL=https://secure.eloqua.com] Eloqua base URL as retrieved by\n   * https://login.eloqua.com/id\n   * @param {?String} [options.sitename] Eloqua sitename\n   * @param {?String} [options.username] Eloqua username\n   * @param {?String} [options.password] Eloqua password\n   * @param {?Number} [options.timeout] Timeout for HTTP calls\n   * @param {?Object} [options.oauth] OAuth object variables\n   * @param {?String} [options.restVersion=2.0] REST API version to use\n   * @param {?String} [options.bulkVersion=2.0] Bulk API version to use\n   */\n  constructor(options) {\n    // TODO: Convert options to PRIVATE!\n    /**\n     * The number of API calls made by this library\n     * @member {Number}\n     */\n    this.apiCalls = 0;\n    /**\n     * The last error thrown by axios\n     * @member {Object}\n     */\n    this.lastError = {};\n    /**\n     * Options for axios library\n     * @member {Object}\n     */\n    this.axiosOptions = {headers: {}};\n    /**\n     * REST API version to use\n     * @member {String}\n     */\n    this.restVersion = options && options.restVersion ? options.restVersion : '2.0';\n    /**\n     * Bulk API version to use\n     * @member {String}\n     */\n    this.bulkVersion = options && options.bulkVersion ? options.bulkVersion : '2.0';\n\n    this.#request = axios.create();\n\n    if (options && options.baseURL) {\n      this.axiosOptions.baseURL = options.baseURL;\n    }\n\n    if (options && options.timeout) {\n      this.axiosOptions.timeout = options.timeout;\n    }\n\n    if (options && options.sitename && options.username && options.password) {\n      this.#sitename = options.sitename;\n      this.#username = options.username;\n      this.#password = options.password;\n      if (!options.oauth) {\n        this.axiosOptions.auth = {\n          username: `${options.sitename}\\\\${options.username}`,\n          password: options.password,\n        };\n      }\n    }\n\n    if (options && options.oauth) {\n      this.#oauth = options.oauth;\n    }\n    /**\n     * @member {module:Appcloud}\n     */\n    this.appcloud = new Appcloud(this);\n    /**\n     * @member {module:Assets}\n     */\n    this.assets = new Assets(this);\n    /**\n     * @member {module:Bulk}\n     */\n    this.bulk = new Bulk(this);\n    /**\n     * @member {module:Data}\n     */\n    this.data = new Data(this);\n    /**\n     * @member {module:System}\n     */\n    this.system = new System(this);\n  }\n\n  /**\n   * Handle Errors from Eloqua\n   * @param {Object} object Error object containing info about error\n   * @param {String} path the requested path\n   * @returns {Error} Error Message\n   * @deprecated\n   * @private\n   */\n  _throwError(object, path) {\n    let error = '';\n    if (object.config && object.response && object.response.status && object.response.statusText) {\n      const {response: {status, statusText}, config: {method, url}} = object;\n      const message = (`${status} error making ${method} request to ${url}: \"${statusText}\"`);\n      error = new ResponseError(message, path, object);\n      log(`${message} ${JSON.stringify(object.data)}`);\n    } else if (object.hasOwnProperty('config') && object.hasOwnProperty('request')) {\n      const {config: {method, url}} = object;\n      const message = (`Internal request error making ${method} request to ${url}`);\n      error = new ResponseError(message, path, object);\n      log(`${message} ${JSON.stringify(object.data)}`);\n    } else {\n      error = object;\n    }\n    log('throwing error');\n    this.lastError = error;\n    throw error;\n  }\n\n  /**\n   * Authenticates using a resource owner password credentials grant\n   * @param {String} sitename Eloqua Sitename\n   * @param {String} username Eloqua Username\n   * @param {String} password Eloqua Password\n   * @returns {Null} No Return\n   */\n  async getPasswordBearer(sitename, username, password) {\n    const url = 'https://login.eloqua.com/auth/oauth2/token';\n    const data = {\n      grant_type: 'password',\n      scope: 'full',\n      username: `${sitename}\\\\${username}`,\n      password: password,\n    };\n    try {\n      const response = await axios.post(url, data, {\n        auth: {\n          username: this.#oauth.client_id,\n          password: this.#oauth.client_secret,\n        },\n      });\n      this.#oauth.token_type = response.data.token_type;\n      this.#oauth.expires = response.data.expires;\n      this.#oauth.refresh_token = response.data.refresh_token;\n      this.#oauth.access_token = response.data.access_token;\n      await this.setHeaders('Authorization', this.#oauth.token_type + ' ' + this.#oauth.access_token);\n    } catch (error) {\n      await this._throwError(error, 'https://login.eloqua.com/auth/oauth2/token');\n    }\n  }\n\n  /**\n   * Sets headers for axiosOptions and request if present\n   * @param {String} name name of header pair\n   * @param {String} value value of header pair\n   * @returns {Null} No Return\n   */\n  setHeaders(name, value) {\n    if (!this.axiosOptions.headers) {\n      this.axiosOptions.headers = {};\n    }\n    this.axiosOptions.headers[name] = value;\n  }\n\n  /**\n   * Grabs baseUrl from Eloqua login data\n   * @param {Function} [cb] callback\n   * @returns {?String} Returns baseURL\n   */\n  async getBaseURL(cb) {\n    log('Getting BaseURL');\n    if (!this.axiosOptions.baseURL || this.axiosOptions.baseURL === null) {\n      log('No BaseURL found');\n      const url = 'https://login.eloqua.com/id';\n      const requestPromise = axios.get(url, this.axiosOptions)\n        .catch(callbackErrorOrThrow(cb, 'https://login.eloqua.com/id'));\n\n      return requestPromise.then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.axiosOptions.baseURL = response.data.urls.base;\n          log(`BaseURL: ${this.axiosOptions.baseURL}`);\n          if (cb) {\n            cb(null, this.axiosOptions.baseURL, requestPromise);\n          } else {\n            return this.axiosOptions.baseURL;\n          }\n        } else {\n          callbackErrorOrThrow(cb, 'https://login.eloqua.com/id');\n        }\n      });\n    } else {\n      log(`BaseURL: ${this.axiosOptions.baseURL}`);\n      if (cb) {\n        cb(null, this.axiosOptions.baseURL, null);\n      }\n      return this.axiosOptions.baseURL;\n    }\n  }\n\n  /**\n   * Sets Auth based on OAuth and Basic\n   * @returns {Promise<void>} Void return but sets internal config\n   */\n  async getAuth() {\n    log('Getting Auth');\n    if (!this.axiosOptions.auth && (!this.axiosOptions.headers || !this.axiosOptions.headers.Authorization)) {\n      log('No Auth found');\n      if (this.#oauth) {\n        if (this.#oauth.token_type && this.#oauth.access_token) {\n          log('Setting Oauth Access Token');\n          this.setHeaders('Authorization', this.#oauth.token_type + ' ' + this.#oauth.access_token);\n        } else if (this.#oauth.client_id &&\n          this.#oauth.client_secret && this.#sitename && this.#username && this.#password) {\n          log('Getting Password Bearer');\n          await this.getPasswordBearer(this.#sitename, this.#username, this.#password);\n        } else {\n          log('OAuth Error');\n        }\n      } else if (this.#sitename && this.#username && this.#password) {\n        log('Setting Basic Auth');\n        this.axiosOptions.auth = {\n          username: `${this.#sitename}\\\\${this.#username}`,\n          password: this.#password,\n        };\n      } else {\n        log('Auth Error');\n      }\n    } else {\n      log('Auth Found');\n    }\n  }\n\n  /**\n   * Gets path with api version\n   * @param {String} api API to use (REST or Bulk)\n   * @param {String} uri Path to call (not including baseURL + API Version)\n   * @returns {string} path to pass to axios\n   * @private\n   */\n  _getURL(api, uri) {\n    let path = uri;\n\n    if (api === 'REST') {\n      path = '/API/REST/' + this.restVersion + uri;\n    } else if (api === 'Bulk') {\n      path = '/API/Bulk/' + this.bulkVersion + uri;\n    }\n\n    return path;\n  }\n\n  /**\n   * Execute request to Eloqua\n   * @param {Object} params Parameters to call Eloqua API\n   * @param {String} params.api API to use (REST or Bulk)\n   * @param {String} params.path Path to call (not including baseURL + API Version)\n   * @param {Object} [params.qs] Querystring object pair to append to URI\n   * @param {String} [params.method=get] HTTP Verb to use\n   * @param {String} [params.data] Data for POST and PUT calls\n   * @param {Object} [params.options={}] Additional options to pass to axios\n   * @param {Function} [cb] Callback\n   * @return {Object} Body of response object\n   */\n  async _request({api, uri, qs, method = 'get', data, options = {}}, cb) {\n    await this.getAuth();\n    await this.getBaseURL();\n\n    log('Auth and BaseURL retrieved');\n    // Workaround for axios defaults until https://github.com/axios/axios/issues/1664 is resolved.\n    const requestOptions = deepmerge(this.axiosOptions, options);\n\n    requestOptions.url = this._getURL(api, uri);\n\n    if (qs) {\n      requestOptions.params = qs;\n    }\n\n    if (data) {\n      requestOptions.data = data;\n    }\n\n    requestOptions.method = method;\n\n    this.apiCalls += 1;\n    log(`${requestOptions.method} request to ${requestOptions.baseURL}${requestOptions.url}`);\n    const requestPromise = this.#request(requestOptions).catch(callbackErrorOrThrow(cb, requestOptions.url));\n\n    if (cb) {\n      requestPromise.then((response) => {\n        if (response && response.data && Object.keys(response.data).length > 0) {\n          cb(null, response.data, response);\n        } else if (response && response.status && response.status < 300) {\n          cb(null, response.status, response);\n        } else {\n          callbackErrorOrThrow(cb, requestOptions.url);\n        }\n      });\n    }\n    return requestPromise;\n  }\n\n  /**\n   * Ensures given properties of object\n   * @param {Array} accepted Array of accepted properties\n   * @param {Object} input Object to be cleaned\n   * @return {Object} Cleaned object with accepted properties\n   * @private\n   */\n  _validate(accepted, input) {\n    const output = {};\n    accepted.forEach((value) => {\n      if (input[value]) {\n        output[value] = input[value];\n      }\n    });\n    return output;\n  }\n}\n\nfunction callbackErrorOrThrow(cb, path) {\n  return function handler(object) {\n    let error;\n    if (object.config && object.response && object.response.status && object.response.statusText) {\n      const {response: {status, statusText}, config: {method, url}} = object;\n      const message = (`${status} error making ${method} request to ${url}: \"${statusText}\"`);\n      error = new ResponseError(message, path, object);\n      log(`${message} ${JSON.stringify(object.data)}`);\n    } else if (object.hasOwnProperty('config') && object.hasOwnProperty('request')) {\n      const {config: {method, url}} = object;\n      const message = (`Internal request error making ${method} request to ${url}`);\n      error = new ResponseError(message, path, object);\n      log(`${message} ${JSON.stringify(object.data)}`);\n    } else {\n      error = object;\n    }\n    if (cb) {\n      log('going to error callback');\n      cb(error);\n    } else {\n      log('throwing error');\n      throw error;\n    }\n  };\n}\n\n/**\n * A function that receives the result of the API request.\n * @callback Eloqua.callback\n * @param {Eloqua.Error} error the error returned by the API or `null`\n * @param {(Object|true)} result the data returned by the API or `true` if the API returns `204 No Content`\n * @param {Object} request the raw {@linkcode https://github.com/mzabriskie/axios#response-schema Response}\n */\n"],"file":"Eloqua.js"}