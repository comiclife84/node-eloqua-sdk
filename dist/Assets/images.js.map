{"version":3,"sources":["Assets/images.js"],"names":["Images","constructor","options","get","querystring","cb","qs","_validate","_request","api","uri","getOne","id","update","imageFile","data","method","delete"],"mappings":"AAAA;;;;;;;;;;;;;AAMe,MAAMA,MAAN,CAAa;AAE1BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA;AAAA;AAAA;AAAA;AACnB,0DAAeA,OAAf;AACD;;AAQDC,EAAAA,GAAG,CAACC,WAAD,EAAcC,EAAd,EAAkB;AACnB,QAAIC,EAAE,GAAG,EAAT;;AACA,QAAIF,WAAJ,EAAiB;AACfE,MAAAA,EAAE,GAAG,oDAAaC,SAAb,CAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,eAAnB,EAAoC,SAApC,EAA+C,MAA/C,EAAuD,QAAvD,CAAvB,EAAyFH,WAAzF,CAAL;AACD;;AAED,WAAO,oDAAaI,QAAb,CAAsB;AAC3BC,MAAAA,GAAG,EAAE,MADsB;AAEzBC,MAAAA,GAAG,EAAE,gBAFoB;AAG3BJ,MAAAA,EAAE,EAAEA;AAHuB,KAAtB,EAIJD,EAJI,CAAP;AAKD;;AAUDM,EAAAA,MAAM,CAACC,EAAD,EAAKR,WAAL,EAAkBC,EAAlB,EAAsB;AAC1B,QAAIC,EAAE,GAAG,EAAT;;AACA,QAAIF,WAAJ,EAAiB;AACfE,MAAAA,EAAE,GAAG,oDAAaC,SAAb,CAAuB,CAAC,OAAD,CAAvB,EAAkCH,WAAlC,CAAL;AACD;;AAED,WAAO,oDAAaI,QAAb,CAAsB;AAC3BC,MAAAA,GAAG,EAAE,MADsB;AAEzBC,MAAAA,GAAG,EAAG,iBAAgBE,EAAG,EAFA;AAG3BN,MAAAA,EAAE,EAAEA;AAHuB,KAAtB,EAIJD,EAJI,CAAP;AAKD;;AA8BDQ,EAAAA,MAAM,CAACD,EAAD,EAAKE,SAAL,EAAgBT,EAAhB,EAAoB;AACxB,UAAMU,IAAI,GAAG,oDAAaR,SAAb,CACX,CACE,YADF,EAEE,WAFF,EAGE,WAHF,EAIE,eAJF,EAKE,OALF,EAME,aANF,EAOE,UAPF,EAQE,cARF,EASE,IATF,EAUE,MAVF,EAWE,MAXF,EAYE,aAZF,EAaE,cAbF,EAcE,MAdF,EAeE,QAfF,EAgBE,kBAhBF,EAiBE,UAjBF,EAkBE,cAlBF,EAmBE,MAnBF,EAoBE,WApBF,EAqBE,WArBF,CADW,EAwBXO,SAxBW,CAAb;;AA2BA,WAAO,oDAAaN,QAAb,CAAsB;AAC3BC,MAAAA,GAAG,EAAE,MADsB;AAEzBC,MAAAA,GAAG,EAAG,iBAAgBE,EAAG,EAFA;AAGzBI,MAAAA,MAAM,EAAE,KAHiB;AAI3BD,MAAAA,IAAI,EAAEA;AAJqB,KAAtB,EAKJV,EALI,CAAP;AAMD;;AAQDY,EAAAA,MAAM,CAACL,EAAD,EAAKP,EAAL,EAAS;AACb,WAAO,oDAAaG,QAAb,CAAsB;AAC3BC,MAAAA,GAAG,EAAE,MADsB;AAEzBC,MAAAA,GAAG,EAAG,iBAAgBE,EAAG,EAFA;AAG3BI,MAAAA,MAAM,EAAE;AAHmB,KAAtB,EAIJX,EAJI,CAAP;AAKD;;AA1HyB","sourcesContent":["'use strict';\n/**\n * @module\n */\n\n/** Images Class */\nexport default class Images {\n  #parent;\n  constructor(options) {\n    this.#parent = options;\n  }\n\n  /**\n   * Retrieve Images\n   * @param {querystring} [querystring]\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  get(querystring, cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'lastUpdatedAt', 'orderBy', 'page', 'search'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: '/assets/images',\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Single Image\n   * @param {number} id\n   * @param {Object} [querystring]\n   * @param {string} [querystring.depth]\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  getOne(id, querystring, cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['depth'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/image/${id}`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Create Image\n   * @param {string} image\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   * //TODO: Create image method\n   */\n  // async create(image) {\n  //\n  //   try {\n  //     return await this.#parent._request({\n  //       api: 'REST',\n  //       uri: '/assets/image/content',\n  //       method: 'post',\n  //       data: data\n  //     });\n  //   } catch (error) {\n  //     return await this.#parent._throwError(error);\n  //   }\n  // }\n\n  /**\n   * Update Image\n   * @param {number} id\n   * @param {imageFile} imageFile\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  update(id, imageFile, cb) {\n    const data = this.#parent._validate(\n      [\n        'accessedAt',\n        'createdAt',\n        'createdBy',\n        'currentStatus',\n        'depth',\n        'description',\n        'folderId',\n        'fullImageUrl',\n        'id',\n        'link',\n        'name',\n        'permissions',\n        'scheduledFor',\n        'size',\n        'source',\n        'sourceTemplateId',\n        'syncDate',\n        'thumbnailUrl',\n        'type',\n        'updatedAt',\n        'updatedBy',\n      ],\n      imageFile\n    );\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/image/${id}`,\n        method: 'put',\n      data: data,\n    }, cb);\n  }\n\n  /**\n   * Delete Image\n   * @param {number} id\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  delete(id, cb) {\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/image/${id}`,\n      method: 'delete',\n    }, cb);\n  }\n}\n\n"],"file":"images.js"}