{"version":3,"sources":["Assets/Emails/emails.js"],"names":["Emails","constructor","options","footers","EmailFooters","headers","EmailHeaders","groups","EmailGroups","deployments","EmailDeployments","get","querystring","cb","qs","_validate","_request","api","uri","getOne","id","create","email","data","method","update","delete"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * @module\n */\n\nimport EmailFooters from './emailFooters';\nimport EmailHeaders from './emailHeaders';\nimport EmailGroups from './emailGroups';\nimport EmailDeployments from './emailDeployments';\n\n/** Emails Class */\nexport default class Emails {\n  /**\n   * Parent Object\n   * @member {Eloqua}\n   */\n  #parent;\n  /**\n   * Constructor\n   * @param {Eloqua} options Parent object\n   */\n  constructor(options) {\n    this.#parent = options;\n    this.footers = new EmailFooters(this.#parent);\n    this.headers = new EmailHeaders(this.#parent);\n    this.groups = new EmailGroups(this.#parent);\n    this.deployments = new EmailDeployments(this.#parent);\n  }\n\n  /**\n   * Retrieve Emails\n   * @param {querystring} [querystring]\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  get(querystring, cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'lastUpdatedAt', 'orderBy', 'page', 'search'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: '/assets/emails',\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Single Email\n   * @param {number} id\n   * @param {Object} [querystring]\n   * @param {string} [querystring.depth]\n   * @param {boolean} [querystring.noMergeContent]\n   * @param {boolean} [querystring.preMerge]\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  getOne(id, querystring, cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['depth', 'noMergeContent', 'preMerge'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/email/${id}`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Create Email\n   * @param {email} email\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  create(email, cb) {\n    const data = this.#parent._validate(\n      [\n        'accessedAt',\n        'archive',\n        'attachments',\n        'bounceBackEmail',\n        'contentSections',\n        'contentServiceInstances',\n        'createdAt',\n        'createdBy',\n        'currentStatus',\n        'depth',\n        'description',\n        'dynamicContents',\n        'emailFooterId',\n        'emailGroupId',\n        'emailHeaderId',\n        'encodingId',\n        'fieldMerges',\n        'files',\n        'folderId',\n        'forms',\n        'htmlContent',\n        'hyperlinks',\n        'id',\n        'images',\n        'isContentProtected',\n        'isPlainTextEditable',\n        'isPrivate',\n        'isTracked',\n        'layout',\n        'name',\n        'permissions',\n        'plainText',\n        'renderMode',\n        'replyToEmail',\n        'replyToName',\n        'scheduledFor',\n        'senderEmail',\n        'senderName',\n        'sendPlainTextOnly',\n        'sourceTemplateId',\n        'style',\n        'subject',\n        'type',\n        'updatedAt',\n        'updatedBy',\n        'virtualMTAId',\n      ],\n      email\n    );\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: '/assets/email',\n        method: 'post',\n      data: data,\n    }, cb);\n  }\n\n  /**\n   * Update Email\n   * @param {number} id\n   * @param {email} email\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  update(id, email, cb) {\n    const data = this.#parent._validate(\n      [\n        'accessedAt',\n        'archive',\n        'attachments',\n        'bounceBackEmail',\n        'contentSections',\n        'contentServiceInstances',\n        'createdAt',\n        'createdBy',\n        'currentStatus',\n        'depth',\n        'description',\n        'dynamicContents',\n        'emailFooterId',\n        'emailGroupId',\n        'emailHeaderId',\n        'encodingId',\n        'fieldMerges',\n        'files',\n        'folderId',\n        'forms',\n        'htmlContent',\n        'hyperlinks',\n        'id',\n        'images',\n        'isContentProtected',\n        'isPlainTextEditable',\n        'isPrivate',\n        'isTracked',\n        'layout',\n        'name',\n        'permissions',\n        'plainText',\n        'renderMode',\n        'replyToEmail',\n        'replyToName',\n        'scheduledFor',\n        'senderEmail',\n        'senderName',\n        'sendPlainTextOnly',\n        'sourceTemplateId',\n        'style',\n        'subject',\n        'type',\n        'updatedAt',\n        'updatedBy',\n        'virtualMTAId',\n      ],\n      email\n    );\n\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/email/${id}`,\n        method: 'put',\n      data: data,\n    }, cb);\n  }\n\n  /**\n   * Delete Email\n   * @param {number} id\n   * @param {Eloqua.callback} cb\n   * @return {Object|String}\n   */\n  delete(id, cb) {\n    return this.#parent._request({\n      api: 'REST',\n        uri: `/assets/email/${id}`,\n      method: 'delete',\n    }, cb);\n  }\n}\n\n"],"file":"emails.js"}